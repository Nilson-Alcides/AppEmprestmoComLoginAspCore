@model IEnumerable<AppLayoutAspCore.Models.Cliente>

@{
    ViewData["Title"] = "Clentes";
}

   




<h1>Clentes</h1>
@* <p class="btn btn-outline-primary" role="button">
    <a asp-action="Cadastrar">
        <span class="fas fa-user-plus" title="Cadastro" aria-hidden="true"></span>
        <span>Cadastrar</span>
    </a>
</p> *@

<div class="table-responsive">
    <table class="table table-bordered" id="ListaCliente">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Id)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Nome)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().CPF)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Telefone)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Email)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Senha)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.First().Situacao)</th>

                <th scope="col">Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Cliente cliente in Model)
            {
                <tr>
                    <th scope="row">@cliente.Id</th>
                    <td>@cliente.Nome</td>
                    <td>@cliente.CPF</td>
                    <td>@cliente.Telefone</td>
                    <td>@cliente.Email</td>
                    <td>@cliente.Senha</td>
                    <td>@cliente.Situacao</td>


                    <td>
                        @if (cliente.Situacao == "A")
                        {
                            <button type="button" class="btn btn-danger">
                                @Html.ActionLink("Desativar", "Desativar", new { id = cliente.Id },
                                         new { onclick = "return confirm('Deseja realmente desativar?');" })
                            </button>
                        }
                        else if(cliente.Situacao == "D")
                        {
                            <button type="button" class=" btn btn-secondar">
                                @Html.ActionLink("Ativar", "Ativar", new { id = cliente.Id },
                                         new { onclick = "return confirm('Deseja realmente ativar?');" })
                            </button>
                        }
                        <button type="button" class=" btn btn-secondary">
                            @Html.ActionLink("Detalhes", "Detalhes", new { id = cliente.Id })
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/datatables@1.11.5/media/js/jquery.dataTables.min.js" crossorigin="anonymous"></script>

    

<script>
    $(document).ready(function () {
        $('#ListaCliente').DataTable({
            "processing": true,
            "serverSide": true,
            "ajax": {
                "url": "/Cliente/Index", // A rota do controlador que retornará os dados
                "type": "POST"
            },
            "columns": [
                { "data": "id" },
                { "data": "Nome" },
                { "data": "CPF" },
                { "data": "Telefone" },
                { "data": "Email" },
                { "data": "Senha" },
                { "data": "Situacao" },
                {
                    "data": null, // A coluna de ações será renderizada manualmente
                    "render": function (data, type, row) {
                        // Aqui você pode personalizar o HTML dos botões de ação
                        return `
                                <button class='btn btn-danger'>Desativar</button>
                                <button class='btn btn-secondary'>Detalhes</button>
                            `;
                    }
                }
            ],
            "language": {
    "decimal": "",
    "emptyTable": "Nenhum dado disponível na tabela",
    "info": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
    "infoEmpty": "Mostrando 0 a 0 de 0 entradas",
    "infoFiltered": "(filtrado de _MAX_ entradas no total)",
    "lengthMenu": "Mostrar _MENU_ entradas",
    "loadingRecords": "Carregando...",
    "processing": "Processando...",
    "search": "Pesquisar:",
    "zeroRecords": "Nenhum registro encontrado",
    "paginate": {
        "first": "Primeiro",
        "last": "Último",
        "next": "Próximo",
        "previous": "Anterior"
    }
}
        });
    });
</script> *@
